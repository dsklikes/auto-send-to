/**
 * #userv2.ts
 *
 * @packageDocumentation
 */
/* eslint-disable */
import _m0 from 'protobufjs/minimal.js';
import { messageTypeRegistry } from '../../../typeRegistry.js';
function createBaseUserV2() {
    return { id: "", name: "", isGold: false };
}
export const UserV2 = {
    $type: "devvit.reddit.v2alpha.UserV2",
    encode(message, writer = _m0.Writer.create()) {
        if (message.id !== "") {
            writer.uint32(10).string(message.id);
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        if (message.isGold === true) {
            writer.uint32(24).bool(message.isGold);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseUserV2();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.id = reader.string();
                    break;
                case 2:
                    message.name = reader.string();
                    break;
                case 3:
                    message.isGold = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            id: isSet(object.id) ? String(object.id) : "",
            name: isSet(object.name) ? String(object.name) : "",
            isGold: isSet(object.isGold) ? Boolean(object.isGold) : false,
        };
    },
    toJSON(message) {
        const obj = {};
        message.id !== undefined && (obj.id = message.id);
        message.name !== undefined && (obj.name = message.name);
        message.isGold !== undefined && (obj.isGold = message.isGold);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseUserV2();
        message.id = object.id ?? "";
        message.name = object.name ?? "";
        message.isGold = object.isGold ?? false;
        return message;
    },
};
messageTypeRegistry.set("devvit.reddit.v2alpha.UserV2", UserV2);
function isSet(value) {
    return value !== null && value !== undefined;
}
