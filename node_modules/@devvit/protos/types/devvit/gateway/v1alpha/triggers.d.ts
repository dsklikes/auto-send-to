/**
 * #triggers.ts
 *
 * @packageDocumentation
 */
import { Metadata } from "@lib/Types.js";
import _m0 from 'protobufjs/minimal.js';
import { Empty } from '../../../google/protobuf/empty.js';
import { TriggerEvent } from '../../data/triggers/v1alpha/triggers.js';
import { InstallationInfo } from '../../dev_portal/installation/installation.js';
export interface TriggerResponse {
    /** total number of apps invoked */
    total: number;
    /** successful installation ids */
    success: string[];
    /** map of installation ids to error message */
    errors: {
        [key: string]: string;
    };
}
export interface TriggerResponse_ErrorsEntry {
    key: string;
    value: string;
}
export declare const TriggerResponse: {
    $type: "devvit.gateway.v1alpha.TriggerResponse";
    encode(message: TriggerResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TriggerResponse;
    fromJSON(object: any): TriggerResponse;
    toJSON(message: TriggerResponse): unknown;
    fromPartial<I extends {
        total?: number | undefined;
        success?: string[] | undefined;
        errors?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        total?: number | undefined;
        success?: (string[] & string[] & { [K in Exclude<keyof I["success"], "$type" | keyof string[]>]: never; }) | undefined;
        errors?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & { [K_1 in Exclude<keyof I["errors"], string | number>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "$type" | keyof TriggerResponse>]: never; }>(object: I): TriggerResponse;
};
export declare const TriggerResponse_ErrorsEntry: {
    $type: "devvit.gateway.v1alpha.TriggerResponse.ErrorsEntry";
    encode(message: TriggerResponse_ErrorsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TriggerResponse_ErrorsEntry;
    fromJSON(object: any): TriggerResponse_ErrorsEntry;
    toJSON(message: TriggerResponse_ErrorsEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & { [K in Exclude<keyof I, "$type" | keyof TriggerResponse_ErrorsEntry>]: never; }>(object: I): TriggerResponse_ErrorsEntry;
};
export interface Triggers {
    OnTrigger(request: TriggerEvent, metadata?: Metadata): Promise<TriggerResponse>;
    OnInstall(request: InstallationInfo, metadata?: Metadata): Promise<Empty>;
    OnUninstall(request: InstallationInfo, metadata?: Metadata): Promise<Empty>;
    OnInstallChanged(request: InstallationInfo, metadata?: Metadata): Promise<Empty>;
}
export declare class TriggersClientImpl implements Triggers {
    private readonly rpc;
    private readonly service;
    constructor(rpc: Rpc, opts?: {
        service?: string;
    });
    OnTrigger(request: TriggerEvent): Promise<TriggerResponse>;
    OnInstall(request: InstallationInfo): Promise<Empty>;
    OnUninstall(request: InstallationInfo): Promise<Empty>;
    OnInstallChanged(request: InstallationInfo): Promise<Empty>;
}
export type TriggersDefinition = typeof TriggersDefinition;
export declare const TriggersDefinition: {
    readonly name: "Triggers";
    readonly fullName: "devvit.gateway.v1alpha.Triggers";
    readonly methods: {
        readonly onTrigger: {
            readonly name: "OnTrigger";
            readonly requestType: {
                $type: "devvit.data.triggers.v1alpha.TriggerEvent";
                encode(message: TriggerEvent, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): TriggerEvent;
                fromJSON(object: any): TriggerEvent;
                toJSON(message: TriggerEvent): unknown;
                fromPartial<I extends {
                    id?: string | undefined;
                    timestamp?: Date | undefined;
                    subreddit?: string | undefined;
                    postSubmit?: {
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    postUpdate?: {
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    postReport?: {
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        reporter?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    commentSubmit?: {
                        comment?: {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    commentUpdate?: {
                        comment?: {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    commentReport?: {
                        comment?: {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        reporter?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    subredditSubscribe?: {
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                        subscriber?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    appInstall?: {
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                        installer?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                    appUpgrade?: {
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                        installer?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    id?: string | undefined;
                    timestamp?: Date | undefined;
                    subreddit?: string | undefined;
                    postSubmit?: ({
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } & {
                        post?: ({
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: ({
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & { [K in Exclude<keyof I["postSubmit"]["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
                            authorFlair?: ({
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & { [K_1 in Exclude<keyof I["postSubmit"]["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_2 in Exclude<keyof I["postSubmit"]["post"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").PostV2>]: never; }) | undefined;
                        author?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_3 in Exclude<keyof I["postSubmit"]["author"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_4 in Exclude<keyof I["postSubmit"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                    } & { [K_5 in Exclude<keyof I["postSubmit"], "$type" | keyof import("../../events/v1alpha/events.js").PostSubmit>]: never; }) | undefined;
                    postUpdate?: ({
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } & {
                        post?: ({
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: ({
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & { [K_6 in Exclude<keyof I["postUpdate"]["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
                            authorFlair?: ({
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & { [K_7 in Exclude<keyof I["postUpdate"]["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_8 in Exclude<keyof I["postUpdate"]["post"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").PostV2>]: never; }) | undefined;
                        author?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_9 in Exclude<keyof I["postUpdate"]["author"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_10 in Exclude<keyof I["postUpdate"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                    } & { [K_11 in Exclude<keyof I["postUpdate"], "$type" | keyof import("../../events/v1alpha/events.js").PostUpdate>]: never; }) | undefined;
                    postReport?: ({
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        reporter?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } & {
                        post?: ({
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: ({
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & { [K_12 in Exclude<keyof I["postReport"]["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
                            authorFlair?: ({
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & { [K_13 in Exclude<keyof I["postReport"]["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_14 in Exclude<keyof I["postReport"]["post"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").PostV2>]: never; }) | undefined;
                        reporter?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_15 in Exclude<keyof I["postReport"]["reporter"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_16 in Exclude<keyof I["postReport"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                    } & { [K_17 in Exclude<keyof I["postReport"], "$type" | keyof import("../../events/v1alpha/events.js").PostReport>]: never; }) | undefined;
                    commentSubmit?: ({
                        comment?: {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } & {
                        comment?: ({
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_18 in Exclude<keyof I["commentSubmit"]["comment"], "$type" | keyof import("../../reddit/v2alpha/commentv2.js").CommentV2>]: never; }) | undefined;
                        author?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_19 in Exclude<keyof I["commentSubmit"]["author"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                        post?: ({
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: ({
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & { [K_20 in Exclude<keyof I["commentSubmit"]["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
                            authorFlair?: ({
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & { [K_21 in Exclude<keyof I["commentSubmit"]["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_22 in Exclude<keyof I["commentSubmit"]["post"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").PostV2>]: never; }) | undefined;
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_23 in Exclude<keyof I["commentSubmit"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                    } & { [K_24 in Exclude<keyof I["commentSubmit"], "$type" | keyof import("../../events/v1alpha/events.js").CommentSubmit>]: never; }) | undefined;
                    commentUpdate?: ({
                        comment?: {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        author?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        post?: {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } & {
                        comment?: ({
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_25 in Exclude<keyof I["commentUpdate"]["comment"], "$type" | keyof import("../../reddit/v2alpha/commentv2.js").CommentV2>]: never; }) | undefined;
                        author?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_26 in Exclude<keyof I["commentUpdate"]["author"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                        post?: ({
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } | undefined;
                            authorFlair?: {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            title?: string | undefined;
                            selftext?: string | undefined;
                            nsfw?: boolean | undefined;
                            authorId?: string | undefined;
                            crowdControlLevel?: import("../../reddit/v2alpha/postv2.js").CrowdControlLevel | undefined;
                            numReports?: number | undefined;
                            isGallery?: boolean | undefined;
                            isMeta?: boolean | undefined;
                            createdAt?: number | undefined;
                            isApproved?: boolean | undefined;
                            isArchived?: boolean | undefined;
                            distinguished?: import("../../reddit/v2alpha/postv2.js").DistinguishType | undefined;
                            ignoreReports?: boolean | undefined;
                            isSelf?: boolean | undefined;
                            isVideo?: boolean | undefined;
                            isLocked?: boolean | undefined;
                            isSpoiler?: boolean | undefined;
                            subredditId?: string | undefined;
                            upvotes?: number | undefined;
                            downvotes?: number | undefined;
                            url?: string | undefined;
                            isSticky?: boolean | undefined;
                            linkFlair?: ({
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & {
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                backgroundColor?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                            } & { [K_27 in Exclude<keyof I["commentUpdate"]["post"]["linkFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").LinkFlairV2>]: never; }) | undefined;
                            authorFlair?: ({
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & {
                                userId?: string | undefined;
                                subredditId?: string | undefined;
                                text?: string | undefined;
                                cssClass?: string | undefined;
                                templateId?: string | undefined;
                                textColor?: string | undefined;
                                backgroundColor?: string | undefined;
                                enabled?: boolean | undefined;
                            } & { [K_28 in Exclude<keyof I["commentUpdate"]["post"]["authorFlair"], "$type" | keyof import("../../reddit/v2alpha/flair.js").UserFlairV2>]: never; }) | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_29 in Exclude<keyof I["commentUpdate"]["post"], "$type" | keyof import("../../reddit/v2alpha/postv2.js").PostV2>]: never; }) | undefined;
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_30 in Exclude<keyof I["commentUpdate"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                    } & { [K_31 in Exclude<keyof I["commentUpdate"], "$type" | keyof import("../../events/v1alpha/events.js").CommentUpdate>]: never; }) | undefined;
                    commentReport?: ({
                        comment?: {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } | undefined;
                        reporter?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                    } & {
                        comment?: ({
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            parentId?: string | undefined;
                            body?: string | undefined;
                            author?: string | undefined;
                            numReports?: number | undefined;
                            collapsedBecauseCrowdControl?: boolean | undefined;
                            spam?: boolean | undefined;
                            deleted?: boolean | undefined;
                        } & { [K_32 in Exclude<keyof I["commentReport"]["comment"], "$type" | keyof import("../../reddit/v2alpha/commentv2.js").CommentV2>]: never; }) | undefined;
                        reporter?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_33 in Exclude<keyof I["commentReport"]["reporter"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_34 in Exclude<keyof I["commentReport"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                    } & { [K_35 in Exclude<keyof I["commentReport"], "$type" | keyof import("../../events/v1alpha/events.js").CommentReport>]: never; }) | undefined;
                    subredditSubscribe?: ({
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                        subscriber?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                    } & {
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_36 in Exclude<keyof I["subredditSubscribe"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                        subscriber?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_37 in Exclude<keyof I["subredditSubscribe"]["subscriber"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                    } & { [K_38 in Exclude<keyof I["subredditSubscribe"], "$type" | keyof import("../../events/v1alpha/events.js").SubredditSubscribe>]: never; }) | undefined;
                    appInstall?: ({
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                        installer?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                    } & {
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_39 in Exclude<keyof I["appInstall"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                        installer?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_40 in Exclude<keyof I["appInstall"]["installer"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                    } & { [K_41 in Exclude<keyof I["appInstall"], "$type" | keyof import("../../events/v1alpha/events.js").AppInstall>]: never; }) | undefined;
                    appUpgrade?: ({
                        subreddit?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } | undefined;
                        installer?: {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } | undefined;
                    } & {
                        subreddit?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            nsfw?: boolean | undefined;
                            type?: import("../../reddit/v2alpha/subredditv2.js").SubredditType | undefined;
                            spam?: boolean | undefined;
                            quarantined?: boolean | undefined;
                        } & { [K_42 in Exclude<keyof I["appUpgrade"]["subreddit"], "$type" | keyof import("../../reddit/v2alpha/subredditv2.js").SubredditV2>]: never; }) | undefined;
                        installer?: ({
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & {
                            id?: string | undefined;
                            name?: string | undefined;
                            isGold?: boolean | undefined;
                        } & { [K_43 in Exclude<keyof I["appUpgrade"]["installer"], "$type" | keyof import("../../reddit/v2alpha/userv2.js").UserV2>]: never; }) | undefined;
                    } & { [K_44 in Exclude<keyof I["appUpgrade"], "$type" | keyof import("../../events/v1alpha/events.js").AppUpgrade>]: never; }) | undefined;
                } & { [K_45 in Exclude<keyof I, "$type" | keyof TriggerEvent>]: never; }>(object: I): TriggerEvent;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "devvit.gateway.v1alpha.TriggerResponse";
                encode(message: TriggerResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): TriggerResponse;
                fromJSON(object: any): TriggerResponse;
                toJSON(message: TriggerResponse): unknown;
                fromPartial<I_1 extends {
                    total?: number | undefined;
                    success?: string[] | undefined;
                    errors?: {
                        [x: string]: string | undefined;
                    } | undefined;
                } & {
                    total?: number | undefined;
                    success?: (string[] & string[] & { [K in Exclude<keyof I["success"], "$type" | keyof string[]>]: never; }) | undefined;
                    errors?: ({
                        [x: string]: string | undefined;
                    } & {
                        [x: string]: string | undefined;
                    } & { [K_1 in Exclude<keyof I["errors"], string | number>]: never; }) | undefined;
                } & { [K_2 in Exclude<keyof I, "$type" | keyof TriggerResponse>]: never; }>(object: I_1): TriggerResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly onInstall: {
            readonly name: "OnInstall";
            readonly requestType: {
                $type: "devvit.dev_portal.installation.InstallationInfo";
                encode(message: InstallationInfo, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): InstallationInfo;
                fromJSON(object: any): InstallationInfo;
                toJSON(message: InstallationInfo): unknown;
                fromPartial<I_2 extends {
                    id?: string | undefined;
                    upgradeStrategy?: import("../../dev_portal/installation/installation.js").UpgradeStrategy | undefined;
                    upgradeStrategyConfig?: {
                        [x: string]: any;
                    } | undefined;
                    runAs?: string | undefined;
                    type?: import("../../../../index.js").InstallationType | undefined;
                    location?: {
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } | undefined;
                    isEnabled?: boolean | undefined;
                } & {
                    id?: string | undefined;
                    upgradeStrategy?: import("../../dev_portal/installation/installation.js").UpgradeStrategy | undefined;
                    upgradeStrategyConfig?: ({
                        [x: string]: any;
                    } & {
                        [x: string]: any;
                    } & { [K_46 in Exclude<keyof I_2["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
                    runAs?: string | undefined;
                    type?: import("../../../../index.js").InstallationType | undefined;
                    location?: ({
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } & {
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } & { [K_47 in Exclude<keyof I_2["location"], "$type" | keyof import("../../dev_portal/installation/installation.js").InstallationLocationInfo>]: never; }) | undefined;
                    isEnabled?: boolean | undefined;
                } & { [K_48 in Exclude<keyof I_2, "$type" | keyof InstallationInfo>]: never; }>(object: I_2): InstallationInfo;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                fromPartial<I_3 extends {} & {} & { [K_49 in Exclude<keyof I_3, "$type">]: never; }>(_: I_3): Empty;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly onUninstall: {
            readonly name: "OnUninstall";
            readonly requestType: {
                $type: "devvit.dev_portal.installation.InstallationInfo";
                encode(message: InstallationInfo, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): InstallationInfo;
                fromJSON(object: any): InstallationInfo;
                toJSON(message: InstallationInfo): unknown;
                fromPartial<I_2 extends {
                    id?: string | undefined;
                    upgradeStrategy?: import("../../dev_portal/installation/installation.js").UpgradeStrategy | undefined;
                    upgradeStrategyConfig?: {
                        [x: string]: any;
                    } | undefined;
                    runAs?: string | undefined;
                    type?: import("../../../../index.js").InstallationType | undefined;
                    location?: {
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } | undefined;
                    isEnabled?: boolean | undefined;
                } & {
                    id?: string | undefined;
                    upgradeStrategy?: import("../../dev_portal/installation/installation.js").UpgradeStrategy | undefined;
                    upgradeStrategyConfig?: ({
                        [x: string]: any;
                    } & {
                        [x: string]: any;
                    } & { [K_46 in Exclude<keyof I_2["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
                    runAs?: string | undefined;
                    type?: import("../../../../index.js").InstallationType | undefined;
                    location?: ({
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } & {
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } & { [K_47 in Exclude<keyof I_2["location"], "$type" | keyof import("../../dev_portal/installation/installation.js").InstallationLocationInfo>]: never; }) | undefined;
                    isEnabled?: boolean | undefined;
                } & { [K_48 in Exclude<keyof I_2, "$type" | keyof InstallationInfo>]: never; }>(object: I_2): InstallationInfo;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                fromPartial<I_3 extends {} & {} & { [K_49 in Exclude<keyof I_3, "$type">]: never; }>(_: I_3): Empty;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        readonly onInstallChanged: {
            readonly name: "OnInstallChanged";
            readonly requestType: {
                $type: "devvit.dev_portal.installation.InstallationInfo";
                encode(message: InstallationInfo, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): InstallationInfo;
                fromJSON(object: any): InstallationInfo;
                toJSON(message: InstallationInfo): unknown;
                fromPartial<I_2 extends {
                    id?: string | undefined;
                    upgradeStrategy?: import("../../dev_portal/installation/installation.js").UpgradeStrategy | undefined;
                    upgradeStrategyConfig?: {
                        [x: string]: any;
                    } | undefined;
                    runAs?: string | undefined;
                    type?: import("../../../../index.js").InstallationType | undefined;
                    location?: {
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } | undefined;
                    isEnabled?: boolean | undefined;
                } & {
                    id?: string | undefined;
                    upgradeStrategy?: import("../../dev_portal/installation/installation.js").UpgradeStrategy | undefined;
                    upgradeStrategyConfig?: ({
                        [x: string]: any;
                    } & {
                        [x: string]: any;
                    } & { [K_46 in Exclude<keyof I_2["upgradeStrategyConfig"], string | number>]: never; }) | undefined;
                    runAs?: string | undefined;
                    type?: import("../../../../index.js").InstallationType | undefined;
                    location?: ({
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } & {
                        id?: string | undefined;
                        name?: string | undefined;
                        type?: import("../../reddit/thing_type.js").ThingType | undefined;
                        icon?: string | undefined;
                    } & { [K_47 in Exclude<keyof I_2["location"], "$type" | keyof import("../../dev_portal/installation/installation.js").InstallationLocationInfo>]: never; }) | undefined;
                    isEnabled?: boolean | undefined;
                } & { [K_48 in Exclude<keyof I_2, "$type" | keyof InstallationInfo>]: never; }>(object: I_2): InstallationInfo;
            };
            readonly requestStream: false;
            readonly responseType: {
                $type: "google.protobuf.Empty";
                encode(_: Empty, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Empty;
                fromJSON(_: any): Empty;
                toJSON(_: Empty): unknown;
                fromPartial<I_3 extends {} & {} & { [K_49 in Exclude<keyof I_3, "$type">]: never; }>(_: I_3): Empty;
            };
            readonly responseStream: false;
            readonly options: {};
        };
    };
};
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
export {};
//# sourceMappingURL=triggers.d.ts.map