/// <reference types="node" resolution-mode="require"/>
import { TwirpContext, TwirpServer } from 'twirp-ts';
import { SubmissionsRequest, SubmissionsResponse, SubmissionUpdateRequest, SubmissionUpdateResponse } from './waitlist_admin.js';
import { Empty } from '../../../google/protobuf/empty.js';
import { StringValue } from '../../../google/protobuf/wrappers.js';
export interface WaitlistAdminTwirp<T extends TwirpContext = TwirpContext> {
    GetSubmissions(ctx: T, request: SubmissionsRequest): Promise<SubmissionsResponse>;
    UpdateSubmission(ctx: T, request: SubmissionUpdateRequest): Promise<SubmissionUpdateResponse>;
    ExportAsCSV(ctx: T, request: Empty): Promise<StringValue>;
}
export declare enum WaitlistAdminMethod {
    GetSubmissions = "GetSubmissions",
    UpdateSubmission = "UpdateSubmission",
    ExportAsCSV = "ExportAsCSV"
}
export declare const WaitlistAdminMethodList: WaitlistAdminMethod[];
export declare function createWaitlistAdminServer<T extends TwirpContext = TwirpContext>(service: WaitlistAdminTwirp<T>): TwirpServer<WaitlistAdminTwirp<TwirpContext<import("http").IncomingMessage, import("http").ServerResponse>>, T>;
//# sourceMappingURL=waitlist_admin.twirp.d.ts.map