var _Result_error, _Result_value;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
export class Result {
    constructor(success, valueOrError) {
        _Result_error.set(this, void 0);
        _Result_value.set(this, void 0);
        this.ok = success;
        if (success) {
            __classPrivateFieldSet(this, _Result_value, valueOrError, "f");
        }
        else {
            if (valueOrError != null) {
                __classPrivateFieldSet(this, _Result_error, valueOrError, "f");
            }
        }
    }
    get value() {
        if (!this.ok) {
            throw new Error('Cannot get value from failed result');
        }
        return __classPrivateFieldGet(this, _Result_value, "f");
    }
    get error() {
        if (this.ok) {
            throw new Error('Cannot get error from non-failed result');
        }
        return __classPrivateFieldGet(this, _Result_error, "f");
    }
    static Ok(value) {
        return new Result(true, value);
    }
    static Err(error) {
        return new Result(false, error);
    }
}
_Result_error = new WeakMap(), _Result_value = new WeakMap();
