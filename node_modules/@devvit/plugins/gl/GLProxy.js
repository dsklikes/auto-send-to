/**
 * GENERATED FILE - DO NOT EDIT
 * See generateGLProxy.cjs.
 */
var _GLProxy_commandBuffer, _GLProxy_nextId;
import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
import { GLMethod } from '@devvit/protos';
import { GLMethodType } from '@devvit/protos';
import { GLCommand } from '@devvit/protos';
export class GLProxy {
    constructor(commandBuffer) {
        _GLProxy_commandBuffer.set(this, void 0);
        _GLProxy_nextId.set(this, 1);
        this.ARRAY_BUFFER = 0x8892;
        this.COLOR_BUFFER_BIT = 0x4000;
        this.DEPTH_TEST = 0xb71;
        this.ELEMENT_ARRAY_BUFFER = 0x8893;
        this.FLOAT = 0x1406;
        this.STATIC_DRAW = 0x88e4;
        this.TRIANGLES = 0x0004;
        this.UNSIGNED_SHORT = 0x1403;
        this.VERTEX_SHADER = 0x8b31;
        this.FRAGMENT_SHADER = 0x8b30;
        __classPrivateFieldSet(this, _GLProxy_commandBuffer, commandBuffer, "f");
    }
    activeTexture() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.activeTexture,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    attachShader() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.attachShader,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    bindAttribLocation() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.bindAttribLocation,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    bindBuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.bindBuffer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    bindFramebuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.bindFramebuffer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    bindRenderbuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.bindRenderbuffer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    bindTexture() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.bindTexture,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    blendColor() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.blendColor,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    blendEquation() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.blendEquation,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    blendEquationSeparate() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.blendEquationSeparate,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    blendFunc() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.blendFunc,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    blendFuncSeparate() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.blendFuncSeparate,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    bufferData() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.bufferData,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    bufferSubData() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.bufferSubData,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    checkFramebufferStatus() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.checkFramebufferStatus,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    clear() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.clear,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    clearColor() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.clearColor,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    clearDepth() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.clearDepth,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    clearStencil() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.clearStencil,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    colorMask() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.colorMask,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    compileShader() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.compileShader,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    copyTexImage2D() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.copyTexImage2D,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    copyTexSubImage2D() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.copyTexSubImage2D,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    createBuffer() {
        var _a, _b;
        const ref = { id: (__classPrivateFieldSet(this, _GLProxy_nextId, (_b = __classPrivateFieldGet(this, _GLProxy_nextId, "f"), _a = _b++, _b), "f"), _a) };
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.createBuffer,
            type: GLMethodType.CONSTRUCTOR,
            args: [],
            referenceId: ref.id,
        }));
        return ref;
    }
    createFramebuffer() {
        var _a, _b;
        const ref = { id: (__classPrivateFieldSet(this, _GLProxy_nextId, (_b = __classPrivateFieldGet(this, _GLProxy_nextId, "f"), _a = _b++, _b), "f"), _a) };
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.createFramebuffer,
            type: GLMethodType.CONSTRUCTOR,
            args: [],
            referenceId: ref.id,
        }));
        return ref;
    }
    createProgram() {
        var _a, _b;
        const ref = { id: (__classPrivateFieldSet(this, _GLProxy_nextId, (_b = __classPrivateFieldGet(this, _GLProxy_nextId, "f"), _a = _b++, _b), "f"), _a) };
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.createProgram,
            type: GLMethodType.CONSTRUCTOR,
            args: [],
            referenceId: ref.id,
        }));
        return ref;
    }
    createRenderbuffer() {
        var _a, _b;
        const ref = { id: (__classPrivateFieldSet(this, _GLProxy_nextId, (_b = __classPrivateFieldGet(this, _GLProxy_nextId, "f"), _a = _b++, _b), "f"), _a) };
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.createRenderbuffer,
            type: GLMethodType.CONSTRUCTOR,
            args: [],
            referenceId: ref.id,
        }));
        return ref;
    }
    createShader() {
        var _a, _b;
        const ref = { id: (__classPrivateFieldSet(this, _GLProxy_nextId, (_b = __classPrivateFieldGet(this, _GLProxy_nextId, "f"), _a = _b++, _b), "f"), _a) };
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.createShader,
            type: GLMethodType.CONSTRUCTOR,
            args: [],
            referenceId: ref.id,
        }));
        return ref;
    }
    createTexture() {
        var _a, _b;
        const ref = { id: (__classPrivateFieldSet(this, _GLProxy_nextId, (_b = __classPrivateFieldGet(this, _GLProxy_nextId, "f"), _a = _b++, _b), "f"), _a) };
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.createTexture,
            type: GLMethodType.CONSTRUCTOR,
            args: [],
            referenceId: ref.id,
        }));
        return ref;
    }
    cullFace() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.cullFace,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    deleteBuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.deleteBuffer,
            type: GLMethodType.DESTRUCTOR,
            args: [],
        }));
    }
    deleteFramebuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.deleteFramebuffer,
            type: GLMethodType.DESTRUCTOR,
            args: [],
        }));
    }
    deleteProgram() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.deleteProgram,
            type: GLMethodType.DESTRUCTOR,
            args: [],
        }));
    }
    deleteRenderbuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.deleteRenderbuffer,
            type: GLMethodType.DESTRUCTOR,
            args: [],
        }));
    }
    deleteShader() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.deleteShader,
            type: GLMethodType.DESTRUCTOR,
            args: [],
        }));
    }
    deleteTexture() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.deleteTexture,
            type: GLMethodType.DESTRUCTOR,
            args: [],
        }));
    }
    depthFunc() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.depthFunc,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    depthMask() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.depthMask,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    depthRange() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.depthRange,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    detachShader() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.detachShader,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    disable() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.disable,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    disableVertexAttribArray() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.disableVertexAttribArray,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    drawArrays() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.drawArrays,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    drawElements() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.drawElements,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    enable() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.enable,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    enableVertexAttribArray() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.enableVertexAttribArray,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    finish() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.finish,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    flush() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.flush,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    framebufferRenderbuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.framebufferRenderbuffer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    framebufferTexture2D() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.framebufferTexture2D,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    frontFace() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.frontFace,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    generateMipmap() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.generateMipmap,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getActiveAttrib() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getActiveAttrib,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getActiveUniform() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getActiveUniform,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getAttachedShaders() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getAttachedShaders,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getAttribLocation() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getAttribLocation,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getBufferParameter() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getBufferParameter,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getContextAttributes() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getContextAttributes,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getError() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getError,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getExtension() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getExtension,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getFramebufferAttachmentParameter() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getFramebufferAttachmentParameter,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getParameter() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getParameter,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getProgramInfoLog() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getProgramInfoLog,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getProgramParameter() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getProgramParameter,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getRenderbufferParameter() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getRenderbufferParameter,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getShaderInfoLog() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getShaderInfoLog,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getShaderParameter() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getShaderParameter,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getShaderPrecisionFormat() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getShaderPrecisionFormat,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getShaderSource() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getShaderSource,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getSupportedExtensions() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getSupportedExtensions,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getTexParameter() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getTexParameter,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getUniform() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getUniform,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getUniformLocation() {
        var _a, _b;
        const ref = { id: (__classPrivateFieldSet(this, _GLProxy_nextId, (_b = __classPrivateFieldGet(this, _GLProxy_nextId, "f"), _a = _b++, _b), "f"), _a) };
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getUniformLocation,
            type: GLMethodType.CONSTRUCTOR,
            args: [],
            referenceId: ref.id,
        }));
        return ref;
    }
    getVertexAttrib() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getVertexAttrib,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    getVertexAttribOffset() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.getVertexAttribOffset,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    hint() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.hint,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isBuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isBuffer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isContextLost() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isContextLost,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isEnabled() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isEnabled,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isFramebuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isFramebuffer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isProgram() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isProgram,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isRenderbuffer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isRenderbuffer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isShader() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isShader,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    isTexture() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.isTexture,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    lineWidth() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.lineWidth,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    linkProgram() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.linkProgram,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    polygonOffset() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.polygonOffset,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    renderbufferStorage() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.renderbufferStorage,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    sampleCoverage() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.sampleCoverage,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    scissor() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.scissor,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    shaderSource() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.shaderSource,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    stencilFunc() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.stencilFunc,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    stencilFuncSeparate() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.stencilFuncSeparate,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    stencilMask() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.stencilMask,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    stencilMaskSeparate() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.stencilMaskSeparate,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    stencilOp() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.stencilOp,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    stencilOpSeparate() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.stencilOpSeparate,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    texParameterf() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.texParameterf,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    texParameteri() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.texParameteri,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform1f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform1f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform1i() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform1i,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform2f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform2f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform2i() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform2i,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform3f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform3f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform3i() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform3i,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform4f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform4f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    uniform4i() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.uniform4i,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    useProgram() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.useProgram,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    validateProgram() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.validateProgram,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    vertexAttrib1f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.vertexAttrib1f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    vertexAttrib2f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.vertexAttrib2f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    vertexAttrib3f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.vertexAttrib3f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    vertexAttrib4f() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.vertexAttrib4f,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    vertexAttribPointer() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.vertexAttribPointer,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
    viewport() {
        __classPrivateFieldGet(this, _GLProxy_commandBuffer, "f").push(GLCommand.fromPartial({
            method: GLMethod.viewport,
            type: GLMethodType.ASYNC,
            args: [],
        }));
    }
}
_GLProxy_commandBuffer = new WeakMap(), _GLProxy_nextId = new WeakMap();
